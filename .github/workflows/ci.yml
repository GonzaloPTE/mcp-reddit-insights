name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      qdrant:
        image: qdrant/qdrant:latest
        ports:
          - 6333:6333
      meilisearch:
        image: getmeili/meilisearch:v1.7
        env:
          MEILI_ENV: development
          MEILI_NO_ANALYTICS: "true"
          MEILI_MASTER_KEY: dev-master-key
        ports:
          - 7700:7700
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt

      - name: Lint (ruff) and format check (black)
        run: |
          ruff check .
          black --check .

      - name: Run unit tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest tests/unit -q

      - name: Run integration tests (with services)
        env:
          QDRANT_URL: http://localhost:6333
          MEILI_URL: http://localhost:7700
          REDIS_URL: redis://localhost:6379
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest tests/integration -q -m integration

  publish-image:
    needs: build-and-test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute lowercase image name
        id: repo
        run: echo "image=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.repo.outputs.image }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=edge,enable={{is_default_branch}}
            type=ref,event=tag
            type=sha,format=short

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


